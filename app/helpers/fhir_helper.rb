# Helper module for all things Nightingale and FHIR
module FhirHelper
  # Formats the basic decedent info from a Nightingale record into the given FHIR::Bundle
  def self.basic_info(death_record, fhir_record)
    resource_id = SecureRandom.uuid.to_s.strip

    patient_resource = FHIR::Patient.new('id' => resource_id,
      'identifier' => [{
        'system' => 'https://github.com/nightingaleproject/nightingale'
      }],
      'name' => [{ 'given' => [death_record.contents['decedentName.firstName']],
                   'family' => [death_record.contents['decedentName.lastName']],
                   'use' => 'official' }],
      'gender' => (death_record.contents['sex.sex']),
      'birthDate' => death_record.contents['dateOfBirth'],
      'text' => { 'status' => 'generated',
                  'div' => '<div>Generated by <a href="https://github.com/nightingaleproject/nightingale">Nightingale</a>. '\
                           "Version identifier: #{Nightingale::Application::VERSION}</div>" },
      'extension' => [
        # race
        # {
        #   'url' => 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race',
        #   'valueCodeableConcept' => {
        #     'text' => 'race',
        #     'coding' => [{
        #       'display' => race_fhir.to_s.capitalize,
        #       'code' => RACE_ETHNICITY_CODES[race_fhir],
        #       'system' => 'http://hl7.org/fhir/v3/Race'
        #     }]
        #   }
        # },
        # ethnicity
        # {
        #   'url' => 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity',
        #   'valueCodeableConcept' => {
        #     'text' => 'ethnicity',
        #     'coding' => [{
        #       'display' => ethnicity_fhir.to_s.capitalize,
        #       'code' => RACE_ETHNICITY_CODES[ethnicity_fhir],
        #       'system' => 'http://hl7.org/fhir/v3/Ethnicity'
        #     }]
        #   }
        # },
        # place of birth
        # {
        #   'url' => 'http://hl7.org/fhir/StructureDefinition/birthPlace',
        #   'valueAddress' => FHIR::DSTU2::Address.new(entity[:birth_place]).to_hash
        # },
        # mother's maiden name
        {
          'url' => 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName',
          'valueString' => death_record.contents['motherName.lastName']
        },
        # birth sex
        # {
        #   'url' => 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex',
        #   'valueCode' => entity[:gender]
        # },
        {
          'url' => 'http://hl7.org/fhir/StructureDefinition/patient-interpreterRequired',
          'valueBoolean' => false
        }]
    )

    # TODO: Additional info?
    patient_resource.name.first.suffix << death_record.contents['decedentName.suffix'] if death_record.contents['decedentName.suffix']
      
    # Add basic info to record
    entry = FHIR::Bundle::Entry.new
    entry.fullUrl = "urn:uuid:#{resource_id}"
    entry.resource = patient_resource
    fhir_record.entry << entry
    entry
  end
end
